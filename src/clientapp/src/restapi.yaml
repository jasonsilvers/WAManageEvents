openapi: 3.0.2
info:
  title: WAManageEvent
  version: 1.0.0
  description: Add on to wild apricot for on site event managment
servers:
  -
    url: 'http://localhost:5000/api/v1'
    description: ''
paths:
  /events:
    summary: Path used to manage the list of events.
    description: >-
      The REST endpoint/path used to list and create zero or more `Events` entities.  This path contains
      a `GET` and `POST` operation to perform the list and create tasks, respectively.
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: Successful response - returns an array of `Events` entities.
      operationId: getEvents
      summary: List All events
      description: Gets a list of all `Events` entities.
    post:
      requestBody:
        description: A new `Events` to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '201':
          description: Successful response.
      operationId: createEvents
      summary: Create a Events
      description: Creates a new instance of a `Events`.
  '/events/{eventsId}':
    summary: Path used to manage a single Events.
    description: >-
      The REST endpoint/path used to get, update, and delete single instances of an `Events`.  This path
      contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks,
      respectively.
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Successful response - returns a single `Events`.
      operationId: getEventById
      summary: Get a Events
      description: Gets the details of a single instance of a `Events`.
    put:
      requestBody:
        description: Updated `Events` information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        '202':
          description: Successful response.
      operationId: updateEvents
      summary: Update a Events
      description: Updates an existing `Events`.
    delete:
      responses:
        '204':
          description: Successful response.
      operationId: deleteEvents
      summary: Delete a Events
      description: Deletes an existing `Events`.
    parameters:
      -
        name: eventsId
        description: A unique identifier for a `Events`.
        schema:
          type: string
        in: path
        required: true
components:
  schemas:
    EventDetails:
      description: ''
      type: object
      properties:
        DescriptionHtml:
          description: ''
          type: string
        TimeZone:
          $ref: '#/components/schemas/TimeZone'
          description: ''
    TimeZone:
      description: ''
      type: object
      properties:
        ZoneId:
          description: ''
          type: string
        Name:
          description: ''
          type: string
        UtcOffset:
          description: ''
          type: integer
    Event:
      description: ''
      required:
        - Id
      type: object
      properties:
        EndDate:
          description: ''
          type: string
        Id:
          description: ''
          type: integer
        IsEnabled:
          description: ''
          type: boolean
        Location:
          description: ''
          type: string
        Name:
          description: ''
          type: string
        RegistrationLimit:
          description: ''
          type: integer
        StartDate:
          description: ''
          type: string
        Details:
          $ref: '#/components/schemas/EventDetails'
          description: ''